
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'progleftminusplusleftmultiplierdivideremainand comment ddot defid divide elseid eqgrt eqles equal equals exitm forl great iden ifid intid kama lb lc lengthm less listm lparen minus multiplier not noteq nullid number or plus printm qmark rb rc remain return rparen sc scanm strid string toid varid vectorid whileidprog : empty\n            | func progempty :func : defid type iden lparen flist rparen lc body rcfunc : defid error iden lparen flist rparen lc body rcfunc : defid type iden lparen error rparen lc body rcfunc : defid error iden lparen error rparen lc body rctype : intid\n            | strid\n            | vectorid\n            | nullidbody : empty\n            | stmt bodystmt : expr sc\n            | defvar sc\n            | single_if\n            | else_if\n            | while_loop\n            | for_loop\n            | return_is sc\n            | block\n            | func return_is : return exprwhile_loop : whileid lparen expr rparen stmtfor_loop : forl lparen iden equal expr toid expr rparen stmtblock : lc body rcsingle_if : ifid lparen expr rparen stmtsingle_if : ifid lparen error rparen stmtelse_if : ifid lparen expr rparen stmt elseid stmtelse_if : ifid lparen error rparen stmt elseid stmtwhile_loop : whileid lparen error rparen stmtfor_loop : forl lparen iden equal error toid expr rparen stmt\n            | forl lparen iden equal expr toid error rparen stmt\n            | forl lparen iden equal error toid error rparen stmtdefvar : varid type iden\n              | varid type iden equal exprdefvar : varid error iden\n              | varid error iden equal exprdefvar : error type iden\n              | error type iden equal exprflist : empty\n             | type iden\n             | type iden kama flistflist : error iden\n             | error iden kama flistflist : type error\n             | type error kama flistflist : type iden kama errorclist : empty\n             | expr\n             | expr kama clistclist :  expr error clistexpr : on_list\n            | expr_list\n            | ternary_expr\n            | not expr\n            | plus expr\n            | minus expr\n            | binary_expr\n            | string\n            | builtin_methods\n            | assignment\n            | number\n            | iden\n            | func_callfunc_call : iden lparen clist rparenon_list : expr lb expr rb\n                | iden lb expr rbassignment :  iden equal exprassignment :  iden error exprexpr_list : lb clist rbternary_expr : expr qmark expr ddot exprternary_expr : expr error expr ddot exprbinary_expr : expr plus expr\n                   | expr minus expr\n                   | expr multiplier expr\n                   | expr divide expr\n                   | expr remain expr\n                   | expr great expr\n                   | expr less expr\n                   | expr equals expr\n                   | expr eqgrt expr\n                   | expr eqles expr\n                   | expr noteq expr\n                   | expr or expr\n                   | expr and exprbinary_expr : expr error exprbuiltin_methods : scanm lparen rparen\n                       | printm lparen clist rparen\n                       | listm lparen clist rparen\n                       | lengthm lparen clist rparen\n                       | exitm lparen clist rparen'
    
_lr_action_items = {'$end':([0,1,2,3,5,87,126,127,128,],[-3,0,-1,-3,-2,-4,-6,-7,-5,]),'defid':([0,3,31,33,34,35,41,44,47,48,49,50,52,53,87,89,106,107,126,127,128,133,174,175,176,177,191,192,193,194,197,198,201,202,207,208,209,210,211,212,213,214,],[4,4,4,4,4,4,4,4,-16,-17,-18,-19,-21,-22,-4,-14,-15,-20,-6,-7,-5,-26,4,4,4,4,-27,-28,-24,-31,4,4,-29,-30,4,4,4,4,-25,-33,-34,-32,]),'error':([4,8,9,10,11,14,15,16,29,30,31,32,33,34,35,40,41,44,45,47,48,49,50,52,53,54,55,56,60,61,62,63,64,65,66,87,89,106,107,108,109,110,114,115,117,120,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,174,175,176,177,178,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,206,207,208,209,210,211,212,213,214,],[7,-8,-9,-10,-11,18,20,23,37,38,67,38,67,67,67,84,67,67,92,-16,-17,-18,-19,-21,-22,-53,-54,-55,-59,-60,-61,-62,-63,-65,112,-4,-14,-15,-20,92,-57,-58,154,156,92,160,-6,-7,-5,92,92,92,-26,92,92,92,-74,-75,-76,-77,-78,92,92,92,92,92,92,92,92,92,92,-71,-88,-68,-66,-67,67,67,67,67,196,160,-89,-90,-91,-92,92,92,92,92,92,-27,-28,-24,-31,92,67,67,204,205,-29,-30,92,92,67,67,67,67,-25,-33,-34,-32,]),'intid':([4,14,15,29,30,32,66,67,],[8,8,8,8,8,8,8,8,]),'strid':([4,14,15,29,30,32,66,67,],[9,9,9,9,9,9,9,9,]),'vectorid':([4,14,15,29,30,32,66,67,],[10,10,10,10,10,10,10,10,]),'nullid':([4,14,15,29,30,32,66,67,],[11,11,11,11,11,11,11,11,]),'iden':([6,7,8,9,10,11,16,18,20,31,33,34,35,37,38,41,44,47,48,49,50,52,53,57,58,59,71,72,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,111,112,113,114,115,116,122,123,124,125,126,127,128,133,159,160,169,170,171,172,173,174,175,176,177,178,191,192,193,194,197,198,199,200,201,202,207,208,209,210,211,212,213,214,],[12,13,-8,-9,-10,-11,22,25,25,40,40,40,40,25,25,40,40,-16,-17,-18,-19,-21,-22,40,40,40,40,40,40,40,40,40,-4,-14,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-15,-20,150,151,152,40,40,157,40,40,40,40,-6,-7,-5,-26,40,40,40,40,40,40,40,40,40,40,40,40,-27,-28,-24,-31,40,40,40,40,-29,-30,40,40,40,40,-25,-33,-34,-32,]),'lparen':([12,13,40,68,69,70,73,74,75,76,77,],[14,15,85,114,115,116,121,122,123,124,125,]),'rparen':([14,15,17,18,19,20,21,22,23,25,29,30,32,36,37,39,40,54,55,56,60,61,62,63,64,65,78,85,108,109,110,119,120,121,122,123,124,125,130,131,132,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,179,180,181,182,183,184,185,186,187,203,204,205,206,],[-3,-3,24,26,-41,27,28,-42,-46,-44,-3,-3,-3,-43,-48,-47,-64,-53,-54,-55,-59,-60,-61,-62,-63,-65,-45,-3,-56,-57,-58,-49,-50,161,-3,-3,-3,-3,-69,-70,167,-87,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,174,175,176,177,-71,-3,-3,-88,182,183,184,185,-68,-66,-67,-51,-50,-52,-89,-90,-91,-92,-72,-73,207,208,209,210,]),'kama':([22,23,25,40,54,55,56,60,61,62,63,64,65,108,109,110,120,130,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,158,161,166,167,168,180,182,183,184,185,186,187,],[29,30,32,-64,-53,-54,-55,-59,-60,-61,-62,-63,-65,-56,-57,-58,159,-69,-70,-87,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-71,-88,-68,-66,-67,159,-89,-90,-91,-92,-72,-73,]),'lc':([24,26,27,28,31,33,34,35,41,44,47,48,49,50,52,53,87,89,106,107,126,127,128,133,174,175,176,177,191,192,193,194,197,198,201,202,207,208,209,210,211,212,213,214,],[31,33,34,35,41,41,41,41,41,41,-16,-17,-18,-19,-21,-22,-4,-14,-15,-20,-6,-7,-5,-26,41,41,41,41,-27,-28,-24,-31,41,41,-29,-30,41,41,41,41,-25,-33,-34,-32,]),'rc':([31,33,34,35,41,42,43,44,47,48,49,50,52,53,79,80,81,86,87,88,89,106,107,126,127,128,133,191,192,193,194,201,202,211,212,213,214,],[-3,-3,-3,-3,-3,87,-12,-3,-16,-17,-18,-19,-21,-22,126,127,128,133,-4,-13,-14,-15,-20,-6,-7,-5,-26,-27,-28,-24,-31,-29,-30,-25,-33,-34,-32,]),'not':([31,33,34,35,41,44,47,48,49,50,52,53,57,58,59,71,72,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,122,123,124,125,126,127,128,133,159,160,169,170,171,172,173,174,175,176,177,178,191,192,193,194,197,198,199,200,201,202,207,208,209,210,211,212,213,214,],[57,57,57,57,57,57,-16,-17,-18,-19,-21,-22,57,57,57,57,57,57,57,57,57,-4,-14,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-15,-20,57,57,57,57,57,57,-6,-7,-5,-26,57,57,57,57,57,57,57,57,57,57,57,57,-27,-28,-24,-31,57,57,57,57,-29,-30,57,57,57,57,-25,-33,-34,-32,]),'plus':([31,33,34,35,40,41,44,45,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,72,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,117,120,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,206,207,208,209,210,211,212,213,214,],[58,58,58,58,-64,58,58,93,-16,-17,-18,-19,-21,-22,-53,-54,-55,58,58,58,-59,-60,-61,-62,-63,-65,58,58,58,58,58,58,-4,-14,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-15,-20,93,-57,-58,58,58,93,93,58,58,58,58,-6,-7,-5,93,93,93,-26,93,93,93,-74,-75,-76,-77,-78,93,93,93,93,93,93,93,93,93,93,-71,58,58,-88,-68,-66,-67,58,58,58,58,58,58,58,58,58,58,93,-89,-90,-91,-92,93,93,93,93,93,-27,-28,-24,-31,93,58,58,58,58,-29,-30,93,93,58,58,58,58,-25,-33,-34,-32,]),'minus':([31,33,34,35,40,41,44,45,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,72,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,117,120,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,206,207,208,209,210,211,212,213,214,],[59,59,59,59,-64,59,59,94,-16,-17,-18,-19,-21,-22,-53,-54,-55,59,59,59,-59,-60,-61,-62,-63,-65,59,59,59,59,59,59,-4,-14,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-15,-20,94,-57,-58,59,59,94,94,59,59,59,59,-6,-7,-5,94,94,94,-26,94,94,94,-74,-75,-76,-77,-78,94,94,94,94,94,94,94,94,94,94,-71,59,59,-88,-68,-66,-67,59,59,59,59,59,59,59,59,59,59,94,-89,-90,-91,-92,94,94,94,94,94,-27,-28,-24,-31,94,59,59,59,59,-29,-30,94,94,59,59,59,59,-25,-33,-34,-32,]),'string':([31,33,34,35,41,44,47,48,49,50,52,53,57,58,59,71,72,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,122,123,124,125,126,127,128,133,159,160,169,170,171,172,173,174,175,176,177,178,191,192,193,194,197,198,199,200,201,202,207,208,209,210,211,212,213,214,],[61,61,61,61,61,61,-16,-17,-18,-19,-21,-22,61,61,61,61,61,61,61,61,61,-4,-14,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-15,-20,61,61,61,61,61,61,-6,-7,-5,-26,61,61,61,61,61,61,61,61,61,61,61,61,-27,-28,-24,-31,61,61,61,61,-29,-30,61,61,61,61,-25,-33,-34,-32,]),'number':([31,33,34,35,41,44,47,48,49,50,52,53,57,58,59,71,72,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,122,123,124,125,126,127,128,133,159,160,169,170,171,172,173,174,175,176,177,178,191,192,193,194,197,198,199,200,201,202,207,208,209,210,211,212,213,214,],[64,64,64,64,64,64,-16,-17,-18,-19,-21,-22,64,64,64,64,64,64,64,64,64,-4,-14,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-15,-20,64,64,64,64,64,64,-6,-7,-5,-26,64,64,64,64,64,64,64,64,64,64,64,64,-27,-28,-24,-31,64,64,64,64,-29,-30,64,64,64,64,-25,-33,-34,-32,]),'varid':([31,33,34,35,41,44,47,48,49,50,52,53,87,89,106,107,126,127,128,133,174,175,176,177,191,192,193,194,197,198,201,202,207,208,209,210,211,212,213,214,],[66,66,66,66,66,66,-16,-17,-18,-19,-21,-22,-4,-14,-15,-20,-6,-7,-5,-26,66,66,66,66,-27,-28,-24,-31,66,66,-29,-30,66,66,66,66,-25,-33,-34,-32,]),'ifid':([31,33,34,35,41,44,47,48,49,50,52,53,87,89,106,107,126,127,128,133,174,175,176,177,191,192,193,194,197,198,201,202,207,208,209,210,211,212,213,214,],[68,68,68,68,68,68,-16,-17,-18,-19,-21,-22,-4,-14,-15,-20,-6,-7,-5,-26,68,68,68,68,-27,-28,-24,-31,68,68,-29,-30,68,68,68,68,-25,-33,-34,-32,]),'whileid':([31,33,34,35,41,44,47,48,49,50,52,53,87,89,106,107,126,127,128,133,174,175,176,177,191,192,193,194,197,198,201,202,207,208,209,210,211,212,213,214,],[69,69,69,69,69,69,-16,-17,-18,-19,-21,-22,-4,-14,-15,-20,-6,-7,-5,-26,69,69,69,69,-27,-28,-24,-31,69,69,-29,-30,69,69,69,69,-25,-33,-34,-32,]),'forl':([31,33,34,35,41,44,47,48,49,50,52,53,87,89,106,107,126,127,128,133,174,175,176,177,191,192,193,194,197,198,201,202,207,208,209,210,211,212,213,214,],[70,70,70,70,70,70,-16,-17,-18,-19,-21,-22,-4,-14,-15,-20,-6,-7,-5,-26,70,70,70,70,-27,-28,-24,-31,70,70,-29,-30,70,70,70,70,-25,-33,-34,-32,]),'return':([31,33,34,35,41,44,47,48,49,50,52,53,87,89,106,107,126,127,128,133,174,175,176,177,191,192,193,194,197,198,201,202,207,208,209,210,211,212,213,214,],[71,71,71,71,71,71,-16,-17,-18,-19,-21,-22,-4,-14,-15,-20,-6,-7,-5,-26,71,71,71,71,-27,-28,-24,-31,71,71,-29,-30,71,71,71,71,-25,-33,-34,-32,]),'lb':([31,33,34,35,40,41,44,45,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,72,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,117,120,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,159,160,161,166,167,168,169,170,171,172,173,174,175,176,177,178,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,206,207,208,209,210,211,212,213,214,],[72,72,72,72,82,72,72,90,-16,-17,-18,-19,-21,-22,-53,-54,-55,72,72,72,-59,-60,-61,-62,-63,-65,72,72,72,72,72,72,-4,-14,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-15,-20,90,-57,-58,72,72,90,90,72,72,72,72,-6,-7,-5,90,90,90,-26,90,90,90,-74,-75,-76,-77,-78,90,90,90,90,90,90,90,90,90,90,-71,72,72,-88,-68,-66,-67,72,72,72,72,72,72,72,72,72,72,90,-89,-90,-91,-92,90,90,90,90,90,-27,-28,-24,-31,90,72,72,72,72,-29,-30,90,90,72,72,72,72,-25,-33,-34,-32,]),'scanm':([31,33,34,35,41,44,47,48,49,50,52,53,57,58,59,71,72,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,122,123,124,125,126,127,128,133,159,160,169,170,171,172,173,174,175,176,177,178,191,192,193,194,197,198,199,200,201,202,207,208,209,210,211,212,213,214,],[73,73,73,73,73,73,-16,-17,-18,-19,-21,-22,73,73,73,73,73,73,73,73,73,-4,-14,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-15,-20,73,73,73,73,73,73,-6,-7,-5,-26,73,73,73,73,73,73,73,73,73,73,73,73,-27,-28,-24,-31,73,73,73,73,-29,-30,73,73,73,73,-25,-33,-34,-32,]),'printm':([31,33,34,35,41,44,47,48,49,50,52,53,57,58,59,71,72,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,122,123,124,125,126,127,128,133,159,160,169,170,171,172,173,174,175,176,177,178,191,192,193,194,197,198,199,200,201,202,207,208,209,210,211,212,213,214,],[74,74,74,74,74,74,-16,-17,-18,-19,-21,-22,74,74,74,74,74,74,74,74,74,-4,-14,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-15,-20,74,74,74,74,74,74,-6,-7,-5,-26,74,74,74,74,74,74,74,74,74,74,74,74,-27,-28,-24,-31,74,74,74,74,-29,-30,74,74,74,74,-25,-33,-34,-32,]),'listm':([31,33,34,35,41,44,47,48,49,50,52,53,57,58,59,71,72,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,122,123,124,125,126,127,128,133,159,160,169,170,171,172,173,174,175,176,177,178,191,192,193,194,197,198,199,200,201,202,207,208,209,210,211,212,213,214,],[75,75,75,75,75,75,-16,-17,-18,-19,-21,-22,75,75,75,75,75,75,75,75,75,-4,-14,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-15,-20,75,75,75,75,75,75,-6,-7,-5,-26,75,75,75,75,75,75,75,75,75,75,75,75,-27,-28,-24,-31,75,75,75,75,-29,-30,75,75,75,75,-25,-33,-34,-32,]),'lengthm':([31,33,34,35,41,44,47,48,49,50,52,53,57,58,59,71,72,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,122,123,124,125,126,127,128,133,159,160,169,170,171,172,173,174,175,176,177,178,191,192,193,194,197,198,199,200,201,202,207,208,209,210,211,212,213,214,],[76,76,76,76,76,76,-16,-17,-18,-19,-21,-22,76,76,76,76,76,76,76,76,76,-4,-14,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-15,-20,76,76,76,76,76,76,-6,-7,-5,-26,76,76,76,76,76,76,76,76,76,76,76,76,-27,-28,-24,-31,76,76,76,76,-29,-30,76,76,76,76,-25,-33,-34,-32,]),'exitm':([31,33,34,35,41,44,47,48,49,50,52,53,57,58,59,71,72,82,83,84,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,114,115,122,123,124,125,126,127,128,133,159,160,169,170,171,172,173,174,175,176,177,178,191,192,193,194,197,198,199,200,201,202,207,208,209,210,211,212,213,214,],[77,77,77,77,77,77,-16,-17,-18,-19,-21,-22,77,77,77,77,77,77,77,77,77,-4,-14,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-15,-20,77,77,77,77,77,77,-6,-7,-5,-26,77,77,77,77,77,77,77,77,77,77,77,77,-27,-28,-24,-31,77,77,77,77,-29,-30,77,77,77,77,-25,-33,-34,-32,]),'sc':([40,45,46,51,54,55,56,60,61,62,63,64,65,108,109,110,117,130,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,158,161,166,167,168,182,183,184,185,186,187,188,189,190,],[-64,89,106,107,-53,-54,-55,-59,-60,-61,-62,-63,-65,-56,-57,-58,-23,-69,-70,-87,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-35,-37,-39,-71,-88,-68,-66,-67,-89,-90,-91,-92,-72,-73,-36,-38,-40,]),'qmark':([40,45,54,55,56,60,61,62,63,64,65,108,109,110,117,120,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,180,182,183,184,185,186,187,188,189,190,195,203,206,],[-64,91,-53,-54,-55,-59,-60,-61,-62,-63,-65,91,-57,-58,91,91,91,91,91,91,91,91,-74,-75,-76,-77,-78,91,91,91,91,91,91,91,91,91,91,-71,-88,-68,-66,-67,91,-89,-90,-91,-92,91,91,91,91,91,91,91,91,]),'multiplier':([40,45,54,55,56,60,61,62,63,64,65,108,109,110,117,120,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,180,182,183,184,185,186,187,188,189,190,195,203,206,],[-64,95,-53,-54,-55,-59,-60,-61,-62,-63,-65,95,95,95,95,95,95,95,95,95,95,95,95,95,-76,-77,-78,95,95,95,95,95,95,95,95,95,95,-71,-88,-68,-66,-67,95,-89,-90,-91,-92,95,95,95,95,95,95,95,95,]),'divide':([40,45,54,55,56,60,61,62,63,64,65,108,109,110,117,120,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,180,182,183,184,185,186,187,188,189,190,195,203,206,],[-64,96,-53,-54,-55,-59,-60,-61,-62,-63,-65,96,96,96,96,96,96,96,96,96,96,96,96,96,-76,-77,-78,96,96,96,96,96,96,96,96,96,96,-71,-88,-68,-66,-67,96,-89,-90,-91,-92,96,96,96,96,96,96,96,96,]),'remain':([40,45,54,55,56,60,61,62,63,64,65,108,109,110,117,120,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,180,182,183,184,185,186,187,188,189,190,195,203,206,],[-64,97,-53,-54,-55,-59,-60,-61,-62,-63,-65,97,97,97,97,97,97,97,97,97,97,97,97,97,-76,-77,-78,97,97,97,97,97,97,97,97,97,97,-71,-88,-68,-66,-67,97,-89,-90,-91,-92,97,97,97,97,97,97,97,97,]),'great':([40,45,54,55,56,60,61,62,63,64,65,108,109,110,117,120,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,180,182,183,184,185,186,187,188,189,190,195,203,206,],[-64,98,-53,-54,-55,-59,-60,-61,-62,-63,-65,98,-57,-58,98,98,98,98,98,98,98,98,-74,-75,-76,-77,-78,98,98,98,98,98,98,98,98,98,98,-71,-88,-68,-66,-67,98,-89,-90,-91,-92,98,98,98,98,98,98,98,98,]),'less':([40,45,54,55,56,60,61,62,63,64,65,108,109,110,117,120,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,180,182,183,184,185,186,187,188,189,190,195,203,206,],[-64,99,-53,-54,-55,-59,-60,-61,-62,-63,-65,99,-57,-58,99,99,99,99,99,99,99,99,-74,-75,-76,-77,-78,99,99,99,99,99,99,99,99,99,99,-71,-88,-68,-66,-67,99,-89,-90,-91,-92,99,99,99,99,99,99,99,99,]),'equals':([40,45,54,55,56,60,61,62,63,64,65,108,109,110,117,120,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,180,182,183,184,185,186,187,188,189,190,195,203,206,],[-64,100,-53,-54,-55,-59,-60,-61,-62,-63,-65,100,-57,-58,100,100,100,100,100,100,100,100,-74,-75,-76,-77,-78,100,100,100,100,100,100,100,100,100,100,-71,-88,-68,-66,-67,100,-89,-90,-91,-92,100,100,100,100,100,100,100,100,]),'eqgrt':([40,45,54,55,56,60,61,62,63,64,65,108,109,110,117,120,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,180,182,183,184,185,186,187,188,189,190,195,203,206,],[-64,101,-53,-54,-55,-59,-60,-61,-62,-63,-65,101,-57,-58,101,101,101,101,101,101,101,101,-74,-75,-76,-77,-78,101,101,101,101,101,101,101,101,101,101,-71,-88,-68,-66,-67,101,-89,-90,-91,-92,101,101,101,101,101,101,101,101,]),'eqles':([40,45,54,55,56,60,61,62,63,64,65,108,109,110,117,120,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,180,182,183,184,185,186,187,188,189,190,195,203,206,],[-64,102,-53,-54,-55,-59,-60,-61,-62,-63,-65,102,-57,-58,102,102,102,102,102,102,102,102,-74,-75,-76,-77,-78,102,102,102,102,102,102,102,102,102,102,-71,-88,-68,-66,-67,102,-89,-90,-91,-92,102,102,102,102,102,102,102,102,]),'noteq':([40,45,54,55,56,60,61,62,63,64,65,108,109,110,117,120,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,180,182,183,184,185,186,187,188,189,190,195,203,206,],[-64,103,-53,-54,-55,-59,-60,-61,-62,-63,-65,103,-57,-58,103,103,103,103,103,103,103,103,-74,-75,-76,-77,-78,103,103,103,103,103,103,103,103,103,103,-71,-88,-68,-66,-67,103,-89,-90,-91,-92,103,103,103,103,103,103,103,103,]),'or':([40,45,54,55,56,60,61,62,63,64,65,108,109,110,117,120,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,180,182,183,184,185,186,187,188,189,190,195,203,206,],[-64,104,-53,-54,-55,-59,-60,-61,-62,-63,-65,104,-57,-58,104,104,104,104,104,104,104,104,-74,-75,-76,-77,-78,104,104,104,104,104,104,104,104,104,104,-71,-88,-68,-66,-67,104,-89,-90,-91,-92,104,104,104,104,104,104,104,104,]),'and':([40,45,54,55,56,60,61,62,63,64,65,108,109,110,117,120,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,158,161,166,167,168,180,182,183,184,185,186,187,188,189,190,195,203,206,],[-64,105,-53,-54,-55,-59,-60,-61,-62,-63,-65,105,-57,-58,105,105,105,105,105,105,105,105,-74,-75,-76,-77,-78,105,105,105,105,105,105,105,105,105,105,-71,-88,-68,-66,-67,105,-89,-90,-91,-92,105,105,105,105,105,105,105,105,]),'rb':([40,54,55,56,60,61,62,63,64,65,72,108,109,110,118,119,120,129,130,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,158,159,160,161,166,167,168,179,180,181,182,183,184,185,186,187,],[-64,-53,-54,-55,-59,-60,-61,-62,-63,-65,-3,-56,-57,-58,158,-49,-50,166,-69,-70,168,-87,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-71,-3,-3,-88,-68,-66,-67,-51,-50,-52,-89,-90,-91,-92,-72,-73,]),'ddot':([40,54,55,56,60,61,62,63,64,65,108,109,110,130,131,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,158,161,166,167,168,180,182,183,184,185,186,187,],[-64,-53,-54,-55,-59,-60,-61,-62,-63,-65,-56,-57,-58,-69,-70,169,170,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-71,-88,-68,-66,-67,170,-89,-90,-91,-92,-72,-73,]),'toid':([40,54,55,56,60,61,62,63,64,65,108,109,110,130,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,158,161,166,167,168,182,183,184,185,186,187,195,196,],[-64,-53,-54,-55,-59,-60,-61,-62,-63,-65,-56,-57,-58,-69,-70,-87,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-71,-88,-68,-66,-67,-89,-90,-91,-92,-72,-73,199,200,]),'equal':([40,150,151,152,157,],[83,171,172,173,178,]),'elseid':([47,48,49,50,52,53,87,89,106,107,126,127,128,133,191,192,193,194,201,202,211,212,213,214,],[-16,-17,-18,-19,-21,-22,-4,-14,-15,-20,-6,-7,-5,-26,197,198,-24,-31,-29,-30,-25,-33,-34,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,3,],[1,5,]),'empty':([0,3,14,15,29,30,31,32,33,34,35,41,44,72,85,122,123,124,125,159,160,],[2,2,19,19,19,19,43,19,43,43,43,43,43,119,119,119,119,119,119,119,119,]),'func':([0,3,31,33,34,35,41,44,174,175,176,177,197,198,207,208,209,210,],[3,3,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'type':([4,14,15,29,30,32,66,67,],[6,16,16,16,16,16,111,113,]),'flist':([14,15,29,30,32,],[17,21,36,39,78,]),'body':([31,33,34,35,41,44,],[42,79,80,81,86,88,]),'stmt':([31,33,34,35,41,44,174,175,176,177,197,198,207,208,209,210,],[44,44,44,44,44,44,191,192,193,194,201,202,211,212,213,214,]),'expr':([31,33,34,35,41,44,57,58,59,71,72,82,83,84,85,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,114,115,122,123,124,125,159,160,169,170,171,172,173,174,175,176,177,178,197,198,199,200,207,208,209,210,],[45,45,45,45,45,45,108,109,110,117,120,129,130,131,120,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,155,120,120,120,120,120,180,186,187,188,189,190,45,45,45,45,195,45,45,203,206,45,45,45,45,]),'defvar':([31,33,34,35,41,44,174,175,176,177,197,198,207,208,209,210,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'single_if':([31,33,34,35,41,44,174,175,176,177,197,198,207,208,209,210,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'else_if':([31,33,34,35,41,44,174,175,176,177,197,198,207,208,209,210,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'while_loop':([31,33,34,35,41,44,174,175,176,177,197,198,207,208,209,210,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'for_loop':([31,33,34,35,41,44,174,175,176,177,197,198,207,208,209,210,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'return_is':([31,33,34,35,41,44,174,175,176,177,197,198,207,208,209,210,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'block':([31,33,34,35,41,44,174,175,176,177,197,198,207,208,209,210,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'on_list':([31,33,34,35,41,44,57,58,59,71,72,82,83,84,85,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,114,115,122,123,124,125,159,160,169,170,171,172,173,174,175,176,177,178,197,198,199,200,207,208,209,210,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'expr_list':([31,33,34,35,41,44,57,58,59,71,72,82,83,84,85,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,114,115,122,123,124,125,159,160,169,170,171,172,173,174,175,176,177,178,197,198,199,200,207,208,209,210,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ternary_expr':([31,33,34,35,41,44,57,58,59,71,72,82,83,84,85,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,114,115,122,123,124,125,159,160,169,170,171,172,173,174,175,176,177,178,197,198,199,200,207,208,209,210,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'binary_expr':([31,33,34,35,41,44,57,58,59,71,72,82,83,84,85,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,114,115,122,123,124,125,159,160,169,170,171,172,173,174,175,176,177,178,197,198,199,200,207,208,209,210,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'builtin_methods':([31,33,34,35,41,44,57,58,59,71,72,82,83,84,85,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,114,115,122,123,124,125,159,160,169,170,171,172,173,174,175,176,177,178,197,198,199,200,207,208,209,210,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'assignment':([31,33,34,35,41,44,57,58,59,71,72,82,83,84,85,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,114,115,122,123,124,125,159,160,169,170,171,172,173,174,175,176,177,178,197,198,199,200,207,208,209,210,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'func_call':([31,33,34,35,41,44,57,58,59,71,72,82,83,84,85,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,114,115,122,123,124,125,159,160,169,170,171,172,173,174,175,176,177,178,197,198,199,200,207,208,209,210,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'clist':([72,85,122,123,124,125,159,160,],[118,132,162,163,164,165,179,181,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> empty','prog',1,'p_prog','parser.py',20),
  ('prog -> func prog','prog',2,'p_prog','parser.py',21),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',32),
  ('func -> defid type iden lparen flist rparen lc body rc','func',9,'p_func','parser.py',38),
  ('func -> defid error iden lparen flist rparen lc body rc','func',9,'p_func_rtype_error','parser.py',44),
  ('func -> defid type iden lparen error rparen lc body rc','func',9,'p_func_flist_error','parser.py',50),
  ('func -> defid error iden lparen error rparen lc body rc','func',9,'p_func_double_error','parser.py',56),
  ('type -> intid','type',1,'p_type','parser.py',63),
  ('type -> strid','type',1,'p_type','parser.py',64),
  ('type -> vectorid','type',1,'p_type','parser.py',65),
  ('type -> nullid','type',1,'p_type','parser.py',66),
  ('body -> empty','body',1,'p_body','parser.py',71),
  ('body -> stmt body','body',2,'p_body','parser.py',72),
  ('stmt -> expr sc','stmt',2,'p_stmt','parser.py',79),
  ('stmt -> defvar sc','stmt',2,'p_stmt','parser.py',80),
  ('stmt -> single_if','stmt',1,'p_stmt','parser.py',81),
  ('stmt -> else_if','stmt',1,'p_stmt','parser.py',82),
  ('stmt -> while_loop','stmt',1,'p_stmt','parser.py',83),
  ('stmt -> for_loop','stmt',1,'p_stmt','parser.py',84),
  ('stmt -> return_is sc','stmt',2,'p_stmt','parser.py',85),
  ('stmt -> block','stmt',1,'p_stmt','parser.py',86),
  ('stmt -> func','stmt',1,'p_stmt','parser.py',87),
  ('return_is -> return expr','return_is',2,'p_return_is','parser.py',92),
  ('while_loop -> whileid lparen expr rparen stmt','while_loop',5,'p_while_loop','parser.py',97),
  ('for_loop -> forl lparen iden equal expr toid expr rparen stmt','for_loop',9,'p_for_loop','parser.py',102),
  ('block -> lc body rc','block',3,'p_block','parser.py',107),
  ('single_if -> ifid lparen expr rparen stmt','single_if',5,'p_single_if','parser.py',112),
  ('single_if -> ifid lparen error rparen stmt','single_if',5,'p_single_if_error','parser.py',117),
  ('else_if -> ifid lparen expr rparen stmt elseid stmt','else_if',7,'p_else_if','parser.py',122),
  ('else_if -> ifid lparen error rparen stmt elseid stmt','else_if',7,'p_else_if_error','parser.py',127),
  ('while_loop -> whileid lparen error rparen stmt','while_loop',5,'p_while_loop_error','parser.py',132),
  ('for_loop -> forl lparen iden equal error toid expr rparen stmt','for_loop',9,'p_for_loop_error','parser.py',138),
  ('for_loop -> forl lparen iden equal expr toid error rparen stmt','for_loop',9,'p_for_loop_error','parser.py',139),
  ('for_loop -> forl lparen iden equal error toid error rparen stmt','for_loop',9,'p_for_loop_error','parser.py',140),
  ('defvar -> varid type iden','defvar',3,'p_defvar','parser.py',146),
  ('defvar -> varid type iden equal expr','defvar',5,'p_defvar','parser.py',147),
  ('defvar -> varid error iden','defvar',3,'p_defvar_type_error','parser.py',155),
  ('defvar -> varid error iden equal expr','defvar',5,'p_defvar_type_error','parser.py',156),
  ('defvar -> error type iden','defvar',3,'p_defvar_var_error','parser.py',164),
  ('defvar -> error type iden equal expr','defvar',5,'p_defvar_var_error','parser.py',165),
  ('flist -> empty','flist',1,'p_flist','parser.py',175),
  ('flist -> type iden','flist',2,'p_flist','parser.py',176),
  ('flist -> type iden kama flist','flist',4,'p_flist','parser.py',177),
  ('flist -> error iden','flist',2,'p_flist_type_error','parser.py',185),
  ('flist -> error iden kama flist','flist',4,'p_flist_type_error','parser.py',186),
  ('flist -> type error','flist',2,'p_flist_iden_error','parser.py',192),
  ('flist -> type error kama flist','flist',4,'p_flist_iden_error','parser.py',193),
  ('flist -> type iden kama error','flist',4,'p_flist_flist_error','parser.py',199),
  ('clist -> empty','clist',1,'p_clist','parser.py',206),
  ('clist -> expr','clist',1,'p_clist','parser.py',207),
  ('clist -> expr kama clist','clist',3,'p_clist','parser.py',208),
  ('clist -> expr error clist','clist',3,'p_clist_kama_error','parser.py',220),
  ('expr -> on_list','expr',1,'p_expr','parser.py',234),
  ('expr -> expr_list','expr',1,'p_expr','parser.py',235),
  ('expr -> ternary_expr','expr',1,'p_expr','parser.py',236),
  ('expr -> not expr','expr',2,'p_expr','parser.py',237),
  ('expr -> plus expr','expr',2,'p_expr','parser.py',238),
  ('expr -> minus expr','expr',2,'p_expr','parser.py',239),
  ('expr -> binary_expr','expr',1,'p_expr','parser.py',240),
  ('expr -> string','expr',1,'p_expr','parser.py',241),
  ('expr -> builtin_methods','expr',1,'p_expr','parser.py',242),
  ('expr -> assignment','expr',1,'p_expr','parser.py',243),
  ('expr -> number','expr',1,'p_expr','parser.py',244),
  ('expr -> iden','expr',1,'p_expr','parser.py',245),
  ('expr -> func_call','expr',1,'p_expr','parser.py',246),
  ('func_call -> iden lparen clist rparen','func_call',4,'p_func_call','parser.py',263),
  ('on_list -> expr lb expr rb','on_list',4,'p_on_list','parser.py',268),
  ('on_list -> iden lb expr rb','on_list',4,'p_on_list','parser.py',269),
  ('assignment -> iden equal expr','assignment',3,'p_expr_assignment','parser.py',274),
  ('assignment -> iden error expr','assignment',3,'p_expr_assignment_error','parser.py',278),
  ('expr_list -> lb clist rb','expr_list',3,'p_expr_list','parser.py',284),
  ('ternary_expr -> expr qmark expr ddot expr','ternary_expr',5,'p_ternary_expr','parser.py',288),
  ('ternary_expr -> expr error expr ddot expr','ternary_expr',5,'p_expr_unexpected_token','parser.py',292),
  ('binary_expr -> expr plus expr','binary_expr',3,'p_binary_expr','parser.py',298),
  ('binary_expr -> expr minus expr','binary_expr',3,'p_binary_expr','parser.py',299),
  ('binary_expr -> expr multiplier expr','binary_expr',3,'p_binary_expr','parser.py',300),
  ('binary_expr -> expr divide expr','binary_expr',3,'p_binary_expr','parser.py',301),
  ('binary_expr -> expr remain expr','binary_expr',3,'p_binary_expr','parser.py',302),
  ('binary_expr -> expr great expr','binary_expr',3,'p_binary_expr','parser.py',303),
  ('binary_expr -> expr less expr','binary_expr',3,'p_binary_expr','parser.py',304),
  ('binary_expr -> expr equals expr','binary_expr',3,'p_binary_expr','parser.py',305),
  ('binary_expr -> expr eqgrt expr','binary_expr',3,'p_binary_expr','parser.py',306),
  ('binary_expr -> expr eqles expr','binary_expr',3,'p_binary_expr','parser.py',307),
  ('binary_expr -> expr noteq expr','binary_expr',3,'p_binary_expr','parser.py',308),
  ('binary_expr -> expr or expr','binary_expr',3,'p_binary_expr','parser.py',309),
  ('binary_expr -> expr and expr','binary_expr',3,'p_binary_expr','parser.py',310),
  ('binary_expr -> expr error expr','binary_expr',3,'p_binary_unexpected_token_two','parser.py',314),
  ('builtin_methods -> scanm lparen rparen','builtin_methods',3,'p_builtin_methods','parser.py',320),
  ('builtin_methods -> printm lparen clist rparen','builtin_methods',4,'p_builtin_methods','parser.py',321),
  ('builtin_methods -> listm lparen clist rparen','builtin_methods',4,'p_builtin_methods','parser.py',322),
  ('builtin_methods -> lengthm lparen clist rparen','builtin_methods',4,'p_builtin_methods','parser.py',323),
  ('builtin_methods -> exitm lparen clist rparen','builtin_methods',4,'p_builtin_methods','parser.py',324),
]
